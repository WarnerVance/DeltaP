# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Tests

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13" ]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Debug directory
      run: |
        pwd
        ls -la

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install dependencies from requirements.txt
        pip install -r requirements.txt
        # Install additional test dependencies if needed
        pip install flake8

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest

    - name: Create .env file with secrets
      run: |
        echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env
        echo "CSV_NAME=${{ secrets.CSV_NAME }}" >> .env

    - name: Test main.py execution
      run: |
        # Run main.py with a timeout to ensure it doesn't hang
        timeout 30 python main.py || true
